{{- if .Values.webhook.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{- .Values.webhook.name -}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{- .Values.webhook.name -}}
  template:
    metadata:
      labels:
        app: {{- .Values.webhook.name -}}
    spec:
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{- .Values.webhook.name -}}
      {{- end }}
      containers:
        - name: webhook
          {{- if .Values.useDevelopmentContainers }}
          {{- if .Values.useLatestContainers }}
          image: {{ printf "%s:latest-dev" .Values.webhook.image.repository | quote }}
          {{- else }}
          image: {{ printf "%s:%s" .Values.webhook.image.repository (default (printf "v%s-dev" .Chart.AppVersion) .Values.webhook.image.tag) | quote }}
          {{- end }}
          {{- else }}
          {{- if .Values.useLatestContainers }}
          image: {{ printf "%s:latest" .Values.webhook.image.repository | quote }}
          {{- else }}
          image: {{ printf "%s:%s" .Values.webhook.image.repository (default (printf "v%s" .Chart.AppVersion) .Values.webhook.image.tag) | quote }}
          {{- end }}
          {{- end }}
          imagePullPolicy: {{ .Values.webhook.image.pullPolicy }}
          args:
          - --tls-crt-file=/secrets/tls.crt
          - --tls-key-file=/secrets/tls.key
          - --port=8443
          - --logtostderr
          - --v=2
          volumeMounts:
          - name: secrets
            mountPath: /secrets
            readOnly: true
      volumes:
        - name: secrets
          secret:
            secretName: {{- .Values.webhook.name -}}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.webhook.allowOnControlPlane }}
      tolerations:
        {{- /* Allow this pod to run on the master. */}}
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      {{- end }}
      {{- if or .Values.webhook.linuxOnly .Values.webhook.onlyOnControlPlane .Values.webhook.nodeSelectors }}
      nodeSelector:
        {{- if .Values.webhook.nodeSelectors }}
          {{- toYaml .Values.webhook.nodeSelectors | nindent 8 }}
        {{- end }}
        {{- if .Values.webhook.linuxOnly }}
        "kubernetes.io/os": linux
        {{- end }}
        {{- if .Values.webhook.onlyOnControlPlane }}
        node-role.kubernetes.io/master: ""
        {{- end }}
      {{- end }}
{{- end }}